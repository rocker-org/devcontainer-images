name: Build and push images

on:
  workflow_dispatch:
    inputs:
      push:
        type: boolean
        description: push the devcontainer images?
        required: true
        default: false
  pull_request:
    branches:
      - main
    paths:
      - build/*.json
      - Makefile
      - src/**.devcontainer.json
      - src/**Dockerfile
      - src/**/assets/**
      - "!**.md"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  detect-changes:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-24.04
    outputs:
      src: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            r-ver: ./**/r-ver/**
            rstudio: ./**/rstudio/**

  generate-matrix:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-json
        run: |
          jsonfile="build/matrix.json"
          echo "json=${jsonfile}" >>"$GITHUB_OUTPUT"
          echo ${jsonfile}
      - id: set-matrix
        run: |
          jsoncontent=$(jq -r 'tostring' ${{ steps.set-json.outputs.json }})
          echo "matrix=${jsoncontent}" >>"$GITHUB_OUTPUT"
          echo "${jsoncontent}"

  generate-matrix-pr:
    needs:
      - detect-changes
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-json
        run: |
          jsonfile="build/matrix.json"
          echo "json=${jsonfile}" >>"$GITHUB_OUTPUT"
          echo ${jsonfile}
      - id: set-matrix
        run: |
          regex=$(echo '${{ needs.detect-changes.outputs.src }}' | jq '.|join("|")' -r)
          jsoncontent=$(jq -r '{ include: [ .include[] | select(.src_name | test("'${regex}'")) ] } | tostring' ${{ steps.set-json.outputs.json }})
          echo "matrix=${jsoncontent}" >>"${GITHUB_OUTPUT}"
          echo "${jsoncontent}"

  build-pr:
    needs:
      - generate-matrix-pr
    runs-on: ubuntu-24.04${{ matrix.platform == 'linux/arm64' && '-arm' || '' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix-pr.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up devcontainer cli
        run: npm install -g @devcontainers/cli
      - name: Test build
        if: ${{ github.event_name == 'pull_request' && matrix.platform == 'linux/amd64' }}
        run: |
          GIT_REPOSITORY="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" \
          PLATFORM=${{ matrix.platform }} \
          SRC_NAME=${{ matrix.src_name }} \
          IMAGE_NAME=${{ matrix.image_name }} \
          VARIANT=${{ matrix.variant }} \
          make test

  build-push:
    needs:
      - generate-matrix
    runs-on: ubuntu-24.04${{ matrix.platform == 'linux/arm64' && '-arm' || '' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up devcontainer cli
        run: npm install -g @devcontainers/cli
      - name: Prep tag suffix
        id: tag-suffix
        run: |
          suffix="$(echo ${{ matrix.platform }} | sed 's|linux/|-|')"
          echo "suffix=${suffix}" >>"${GITHUB_OUTPUT}"
      - name: Build and push Docker images
        run: |
          GIT_REPOSITORY="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" \
          PLATFORM=${{ matrix.platform }} \
          SRC_NAME=${{ matrix.src_name }} \
          IMAGE_NAME=${{ matrix.image_name }} \
          VARIANT=${{ matrix.variant }} \
          TAG_SUFFIX=${{ matrix.image_name == 'r-ver' && steps.tag-suffix.outputs.suffix || '' }} \
          DEVCON_BUILD_OPTION=--push\ ${{ inputs.push }} \
          make devcontainer ${{ github.event_name == 'pull_request' && '--dry-run' || '' }}

  merge:
    needs:
      - build-push
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        run: |
          SRC_NAME=r-ver \
          IMAGE_NAME=r-ver \
          VARIANT=4.5 \
          DRY_RUN=${{ github.event_name == 'pull_request' && '--dry-run' || '' }} \
          make imagetools-create
